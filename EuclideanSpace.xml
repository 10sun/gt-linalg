<?xml version="1.0" encoding="UTF-8"?>

<!--********************************************************************
Copyright 2017 Georgia Institute of Technology

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation.  A copy of
the license is included in gfdl.xml.
*********************************************************************-->

<section xml:id="section-EuclideanSpace">
  <title>Euclidean Space</title>

  <p></p>

To get started, we need to know a little bit about a very important collection of "vectors," called <em> Euclidean space </em>.
This may sound fancy, but it is actually not too far off from everyday intuition, once we get past the notational and terminological barriers. 

<subsection>
	<title> Vectors and <m>\mathbb R^n</m></title>


<p></p>
The heroes of this course are important objects called <term> vectors</term>. These have several incarnations, but one way to think about them is that they are just collections of numbers. Specifically, if <m>n=1,2,3,...</m> is a positive whole number, then an <m>n</m>-vector is an <em> ordered </em> list of <m> n </m> numbers. There are a few options for how we may display this data, and usually we will do so by writing this list of numbers vertically and putting parentheses around them. For example, if <m>n=3</m>, then a <m>3</m>-vector is a list of three numbers in order. For example, it could be the list of the numbers <m>7,-5,\pi</m>.
We would then denote this vector, calling it <m>v</m>, by
$$
v=
\begin{pmatrix}
7
\\
-5
\\
\pi
\end{pmatrix}
.
$$
</subsection>

<subsection>
	<title> Three-dimensional examples</title>
As you have seen in your calculus class, this data could correspond to a point in real <m>3</m>-dimensional space, where we usually think of a point in <m>3</m> dimensions as specified by the data of <m>(x,y,z)</m> coordinates. This already leads to an important point; we often identify vectors with ordinary points in <m>n</m>-dimensional space, although they aren't quite the same things. In particular, vectors have additonal structure which ordinary points do not, and thinking only in this way can restrict our freedom to think about a much wider array of problems. 

<p></p>
For example, another soure of <m>3</m>-vectors is the set of pixels on a computer screen. Each pixel's color is determined by three numbers, its Red, Green, and Blue (RGB) <em> coordinates</em>. This data is equivalent to the data of a <m>3</m>-vector, where on a typical computer, the red, green, and blue input numbers are given by whole numbers between <m>0</m> and <m>255</m> (so there are <m>256^3</m> total color choices). For exmaple, the choice 
$$
v=
\begin{pmatrix}
51
\\
255
\\
25.5
\end{pmatrix}
$$
should give a color which is very green, and has just a little blue and red in it. In fact, the corresponding color looks like 
$$
\Huge
{\bf \color{ColorEx1}\text{ THIS. } }
$$



If you choose the vector
$$
v=
\begin{pmatrix}
255
\\
255
\\
0
\end{pmatrix}
,
$$
then you expect a mix of red and green, which gives yellow. Indeed, the corresponding color is 
$$
\Huge
{\bf \color{ColorEx2}\text{ THIS. } }
$$
</subsection>
<subsection>
	<title>Drawing vectors as arrows</title>

Another way to think about vectors, especially in small-dimensional (i.e., for small <m>n</m>) cases is by drawing arrows. 
For example, when <m>n=3</m>, the vector
$$
v=
\begin{pmatrix}
7
\\
-5
\\
\pi
\end{pmatrix}
$$
can be represented visually by the arrow pointing from the origin in <m>3</m>-dimensional space to the point with <m>(x,y,z)</m> coordinates <m>(7,-5,-\pi)</m>. (DRAW PICTURE HERE).
In this way of thinking about vectors, which is especially prominent in physics and engineering, vectors have important geometric quantities associated to them: direction and magnitude (we will return to these concepts when we discuss the geometry of <m>\mathbb R^n</m> in the next subsection). (LINK THIS SUBSECTION.) Direction is just what it sounds like; the way the arrow points, and magnitude is just the length of the arrow. 
(GIVE THEM A TOOL WHERE THEY CAN DRAG A 2-D VECTOR AROUNDA AND AN APPLET TELLS THEM THE ANGLE AND THE LENGTH)
</subsection>

<subsection>
	<title> Higher-dimensional examples</title>

<p></p>
Although you may already be more familiar with this "arrow" description of vectors, there are many advantages to the conception of a vector as a list of numbers, which is a powerful <i> algebraic</i> way of thinking (and, after all, <em>algebra</em> is in the title of this course). This is  is critical to work efficiently, and is <em>essential</em> in higher-dimensional situations when we can no longer rely on drawing pictures. For example, as soon as <m>n>3</m>, drawing an arrow in <m>n</m>-dimensional space is not possible, but even for <m>n=100</m>, listing <m>100</m> numbers in order isn't so hard to imagine! Moreover, this way of thinking is much more flexible and allows us to study a lot more types of problems.

<p></p>
We now note a few interesting examples of higher dimensional examples of interest. The case <m>n=3</m> is natural as we live in a <m>3</m>-dimensional world. For example, if I want to specify a meeting location to you, I can specify the coordinates of the spot with <m>2</m> data points, namely the latitude and longitude on Earth, so each point on Earth's surface is specified by a <m>2</m>-dimensional vector
$$
v=
\begin{pmatrix}
\text{ latitude }
\\
\text{ longitude }
\end{pmatrix}
.
$$
Correspondingly, the surface of a sphere is a two-dimensional object. If I want to meet you in Manhattan, as opposed to Kansas, the GPS coordinates may not be enough for you to find me as there are many tall buildings. I could narrow down an exact place in the universe to meet you by specifying one more piece of information to you, such as the elevation above the Earth's surface. Thus, I could specify our meeting location by giving you a <m>3</m>-dimensional vector, <m>v</m>, given by
$$
v=
\begin{pmatrix}
\text{ latitude }
\\
\text{ longitude }
\\
\text{ elevation }
\end{pmatrix}
.
$$
If I want to also be sure to see you at this location, I had also better be sure to tell you a <i> time </i> to meet me there. To do so, I need to tell you one more number, say the number of seconds (or hours, etc.) after Midnight on January 1, 1 A.D. Thus, I can completely specify everything you need to know to find me there, the proposed point in <i> space-time</i>, by giving you a <m>4</m>-dimensional vector
$$
v=
\begin{pmatrix}
\text{ latitude }
\\
\text{ longitude }
\\
\text{ elevation }
\\
\text{ time }
\end{pmatrix}
.
$$
For example, if I want to meet you at 
$$
v=
\begin{pmatrix}
\text{ 33.7708 }
\\
\text{84.3861 }
\\
\text{933}
\\
\text{ 63,729,649,800}
\end{pmatrix}
,
$$
where the first two numbers are the latitude and longitude coordinates in degrees, the third number is height above the ground in feet, and the last number is the time in seconds after Midnight on January 1, 1 A.D., then I am requesting that you meet me at 4:30 PM on the 4th of July in 2020, at the roof of the Bank of America Plaza. 

<p></p>
Although we never specify our meeting locations and times in this formal manner, it is an essentially equivalent way of organizing the information we are used to giving and receiving.

<p></p>

As an example of a natural, but very very huge dimensional, vector which you may encounter in everyday life, consider specifying a 1 Megapixel image. In order to tell you all the information this image contains, for each of the one million pixels, I need to tell you the RGB coordinates, which we saw above are determined by <m>3</m> data points. We can then specify the image by choosing a path through all the pixels in the image, say reading from left to right and from top to bottom in the image (as you are reading the text on this page), and specifying the RGB coordinates at each point. This procedure gives a way to think of an image as an element of a <m>3,000,000</m>-dimensional vector space. Moreover, each entry in such a vector is given by one of <m>256</m> choices, and so the number of possible images is a number so large, that it has about <m>7.2</m> million digits. It is often said that a picture is worth a thousand words, but given that each RGD coordinate is a number with <m>256=2^8</m> choices, and so each pixel requires <m>24</m> bits of information to store, a single image contains <m> 24,000,000</m> bits of information. On the other hand, the average word in English is very nearly <m>5</m> letters, which contains <m>5</m> bytes or <m>40</m> bits of information. Thus, we could more accurately say that a picture is worth <m>600,000</m> words!
</subsection>

<subsection>
	<title>Notation for and definition of Euclidean space</title> 

Finally, we have a short word on notation. To save space, we sometimes use a few mathematical symbols to denote common situations. For now, we just require the notation <m> \mathbb R^n</m>, read "R-n," which denotes the set of all <m>n</m>-dimensional vectors, and which we call the <m>n</m>-<i>dimensional Euclidean space</i>. In thinking of the set of <em>all</em> vectors of a given dimension, we are already suggesting that they may "interact" with one another, and we shall shortly see that there are algebraic ways to combine multiple vectors to obtain new vectors, just like you can add, multiple, and subtract ordinary numbers.
</subsection>



</section>
